#!/usr/bin/python3

import fwutils

(u, data) = fwutils.init("dhcp.json")

# Set global options
for section in u.get("dhcp"):
    if  u.get("dhcp", section) == "dnsmasq":
        u.set("dhcp", section, "dhcpleasemax", data['general']["dhcpleasemax"])

# Setup DHCP ranges
rcounter = len(data['servers'])
for s in data['servers']:
    iname = fwutils.get_interface_name(u, s["hwaddr"])
    sname = f'dhcp{rcounter}'
    fwutils.vprint(f'Creating DHCP server {sname} on {iname}')
    u.set("dhcp", sname, "dhcp") # create named record
    u.set("dhcp", sname, "interface", iname)
    u.set("dhcp", sname, "leasetime", s["leasetime"])
    u.set("dhcp", sname, "ignore", s["ignore"])
    u.set("dhcp", sname, "start", s["start"])
    u.set("dhcp", sname, "limit", s["limit"])
    u.set("dhcp", sname, "dhcp_option", s["dhcp_option"])
    if s["domain"]:
        u.set("dhcp", sname, "domain", s["domain"])
    rcounter = rcounter - 1

# Create static leases
for r in data['reservations']:
    rname = fwutils.sanitize(r["name"])
    fwutils.vprint(f'Creating static lease {rname}')
    u.set("dhcp", rname, "host") # create named record
    #u.set("network", aname, "device", u.get("network", fwutils.sanitize(a["device"]), "device"))
    u.set("dhcp", rname, "name", rname)
    u.set("dhcp", rname, "mac", r['mac'])
    u.set("dhcp", rname, "ip", r['ip'])
    u.set("dhcp", rname, "dns", 1)

# Save configuration
u.commit("dhcp")
